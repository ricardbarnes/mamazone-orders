services:

  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - 80:8080
    depends_on:
      - producer
      - consumer
    networks:
      - mamazone
    environment:
      - API_APP_PORT=${API_APP_PORT}
      - SOCKET_COMMAND_BUS_HOST=${SOCKET_COMMAND_BUS_HOST}
      - SOCKET_COMMAND_BUS_PORT=${SOCKET_COMMAND_BUS_PORT}
      - SOCKET_QUERY_BUS_HOST=${SOCKET_QUERY_BUS_HOST}
      - SOCKET_QUERY_BUS_PORT=${SOCKET_QUERY_BUS_PORT}

  consumer:
    build:
      context: .
      dockerfile: consumer/Dockerfile
    depends_on:
      - producer
    networks:
      - mamazone
    environment:
      - SOCKET_EVENT_BUS_PORT=${SOCKET_EVENT_BUS_PORT}
      - SOCKET_COMMAND_BUS_HOST=${SOCKET_COMMAND_BUS_HOST}
      - SOCKET_COMMAND_BUS_PORT=${SOCKET_COMMAND_BUS_PORT}

  producer:
    build:
      context: .
      dockerfile: producer/Dockerfile
    networks:
      - mamazone
    environment:
      - SOCKET_COMMAND_BUS_PORT=${SOCKET_COMMAND_BUS_PORT}
      - SOCKET_QUERY_BUS_PORT=${SOCKET_QUERY_BUS_PORT}
      - SOCKET_EVENT_BUS_HOST=${SOCKET_EVENT_BUS_HOST}
      - SOCKET_EVENT_BUS_PORT=${SOCKET_EVENT_BUS_PORT}

  mongo:
    image: mongo
    restart: always
    volumes:
      - mongodb_data:/data/db
    ports:
      - 27020:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_INIT_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INIT_ROOT_PASSWORD}

networks:
  mamazone:
    driver: bridge

volumes:
  mongodb_data: